typedef ::= keyword+
valuedef ::= value: value
struct ::= (\( | \n\t) (typedef | valuedef)* (-> value)? (\) | \dt)

value ::= aval? symb? aval
aval ::= num | string | keyword | struct
aval ::= keyword struct

keyword ::= (_a-Z)+(_a-Z0-9)*
num ::= (0-9)(_0-9)* | ((0-9)(_0-9)*)?.(_0-9)+
string ::= "(.*)" | '(.*)'

symb ::= = | and | > | or | < | != | xor | >=
symb ::= >> | <= | << | .. | in | \* | +-
symb ::= / | ^ | \| | % | , | & | :
unary_symb ::= \+ | - | not

# ? -> one or zero times;   + -> at least one time
# * -> any number of times; () -> grouping elementns
# a-Z -> letters;           0-9 -> numbers
# \( \) -> ( );             (.*) -> anything
# \t -> indent;             \dt -> deindent
